name: Build and Deploy to Cloudflare Pages

on:
    push:
        branches:
            - dev
jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./docs
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Homebrew
              id: set-up-homebrew
              uses: Homebrew/actions/setup-homebrew@master

            - uses: tecolicom/actions-use-homebrew-tools@v1
              with:
                  tools: cestef/tap/zola svgo

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  package_json_file: ./docs/package.json

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"
                  cache-dependency-path: ./docs/pnpm-lock.yaml
            
            - name: Install dependencies
              run: pnpm install

            - name: Cache Zola build
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/zola
                  key: ${{ runner.os }}-zola-${{ hashFiles('**/*.md', 'config.toml', 'templates/**/*') }}
                  restore-keys: |
                      ${{ runner.os }}-zola-

            - name: Build Tailwind CSS
              run: pnpm run css:build

            - name: Build Zola site
              run: zola build

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: site
                  path: public

    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: site
                  path: public

            - name: Deploy
              uses: cloudflare/wrangler-action@v3
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  command: pages deploy public --project-name=rwalk-dev
                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}