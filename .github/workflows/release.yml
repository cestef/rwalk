name: Release

permissions:
    contents: write

on:
    push:
        tags:
            - v[0-9]+.*
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true
            - name: Test
              run: cargo test --all
    create-release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: taiki-e/create-gh-release-action@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

    upload-assets:
        needs: create-release
        strategy:
            matrix:
                include:
                    - target: aarch64-unknown-linux-gnu
                      os: ubuntu-latest
                      tar_os: linux
                      tar_arch: arm64
                    - target: aarch64-apple-darwin
                      os: macos-latest
                      tar_os: darwin
                      tar_arch: arm64
                    - target: x86_64-unknown-linux-gnu
                      os: ubuntu-latest
                      tar_os: linux
                      tar_arch: amd64
                    - target: x86_64-apple-darwin
                      os: macos-latest
                      tar_os: darwin
                      tar_arch: amd64
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
            - name: Generate tag
              id: tag
              # Get the latest tag without the v prefix
              run: echo "tag=$(git describe --tags --abbrev=0 | sed 's/v//')" >> $GITHUB_OUTPUT
            - name: Rust Cache
              uses: Swatinem/rust-cache@v2.7.3
            - uses: taiki-e/upload-rust-binary-action@v1
              with:
                  bin: rwalk
                  target: ${{ matrix.target }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  archive: $bin-${{ steps.tag.outputs.tag }}-${{ matrix.tar_os }}-${{ matrix.tar_arch }}
    homebrew-releaser:
        needs: upload-assets
        runs-on: ubuntu-latest
        name: homebrew-releaser
        steps:
            - name: Release my project to my Homebrew tap
              uses: Justintime50/homebrew-releaser@v1
              with:
                  homebrew_owner: cestef
                  homebrew_tap: homebrew-tap
                  formula_folder: formula
                  github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                  commit_owner: homebrew-releaser
                  commit_email: homebrew-releaser@cstef.dev

                  install: 'bin.install "rwalk"'

                  target_darwin_amd64: true
                  target_darwin_arm64: true
                  target_linux_amd64: true
                  target_linux_arm64: true

                  update_readme_table: true

                  # Skips committing the generated formula to a homebrew tap (useful for local testing).
                  skip_commit: false
                  # Logs debugging info to console.
                  debug: false
